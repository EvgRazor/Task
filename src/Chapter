1. Подсчет повторяющихся символов.
Написать программу, которая подсчитывает повторяющиеся символы в заданной строке.

2. Отыскание первого неповторяющегося символа.
Написать программу, которая возвращает первый неповторяющийся (некратный) символ в заданной строк

3. Инвертирование букв и слов.
Написать программу, которая инвертирует буквы каждого слова, и программу, которая инвертирует буквы каждого слова и
сами слова.

4. Проверка, содержит ли строковое значение только цифры.
Написать программу, которая проверяет, что заданная строка содержит только циф

5. Подсчет гласных и согласных.
Написать программу, которая подсчитывает число гласных и согласных букв в заданной строке.
Сделать это для английского языка, который имеет пять гласных (а, е, /, о и и).

6. Подсчет появлений некоторого символа.
Написать программу, которая подсчитывает появления того или иного символа в заданной строке.

7.Конвертирование строки в значение типа int, long, float или double.
Написать программу, которая конвертирует заданный объект типа string (представляющий число) в значение типа int, long, float или double

8.Удаление пробелов из строки.
Написать программу, которая удаляет все пробелы из заданной строки.

9. Соединение нескольких строк с помощью разделителя.
Написать программу, которая соединяет заданные строки с помощью заданного разделителя.

10. Генерирование всех перестановок.
Написать программу, которая генерирует все перестановки заданной строки.

11. Проверка, что строка является палиндромом.
Написать программу, которая выясняет, является ли данная строка палиндромом или нет.

12. Удаление повторяющихся символов.
Написать программу, которая удаляет повторяющиеся символы из заданной строки.

13. Удаление заданного символа.
Написать программу, которая удаляет заданный символ из заданной строк.

14. Отыскание символа с наибольшим числом появлений.
Написать программу, которая отыскивает символ с наибольшим числом появлений в заданной строке.

15. Сортировка массива строк по длине.
Написать программу, которая сортирует заданный массив по длине строк.

16. Проверка наличия подстроки в строке.
Написать программу, которая проверяет, содержит ли заданная строка заданную подстроку.

17. Подсчет числа появлений подстроки в строке.
Написать программу, которая подсчитывает число появлений заданной строки в другой заданной строке.

18. Проверка, являются ли две строки анаграммами.
Написать программу, которая проверяет, являются ли две строки анаграммами. Учесть, что анаграммой строки является строка,
образованная перестановкой букв в обратном порядке с игнорированием заглавных букв и пробелов.

19. Объявление многострочных строковых литералов (или текстовых блоков).
Написать программу, которая объявляет многострочные строковые литералы или текстовые блоки.

20. Конкатенирование одной и той же строки п раз.
Написать программу, которая конкатенирует одну и ту же строку заданное число раз.

21. Удаление начальных и замыкающих пробелов.
Написать программу, которая удаляет начальные и замыкающие пробелы заданной строки.

22. Отыскание наибольшего общего префикса.
Написать программу, которая отыскивает наибольший общий префикс заданных строк.

23. Применение отступа.
Написать несколько фрагментов кода с применением отступа к заданному тексту.

24. Трансформирование строк.
Написать несколько фрагментов кода с преобразованием строки в другую строку.

25. Вычисление минимума и максимума двух чисел.
Написать программу, которая возвращает минимум и максимум двух чис

26. Сложение двух крупных чисел типа int/long и переполнение операции.
Написать программу, которая складывает два крупных числа int/long и выбрасывает арифметическое исключение в случае переполнения операции.

28. Конвертирование в число посредством беззнаковой конверсии.
Написать программу, которая конвертирует заданное число типа int в число типа long с помощью беззнаковой конверсии.

29. Сравнение двух беззнаковых чисел.
Написать программу, которая сравнивает два заданных числа как беззнаковые

30. Вычисление частного и остатка от деления беззнаковых значений.
Написать программу, которая вычисляет частное и остаток заданного беззнакового значения

31. Значение типа doubie/fioat является конечным значением с плавающей точкой.
Написать программу, которая определяет, что заданное значение типа double/float является конечным значением с плавающей точкой

32. Применение логического И/ИЛИ/исключающего ИЛИ к двум булевым выражениям.
Написать программу, которая применяет логическое И/ИЛИ/исключающее ИЛИ к двум булевым выражениям.

33. Конвертирование значения типа Biginteger в примитивный тип.
Написать программу, которая извлекает значение примитивного типа из заданного значения типа Biginteger.

34. Конвертирование значения типа long в значение типа int.
Написать программу, которая конвертирует значение типа long в значение типа int

40. Проверка ссылок на null в функциональном и императивном стилях программирования.
Написать программу, которая выполняет проверки заданных ссылок на null в функциональном и императивном стилях программирования.

41. Проверка ссылок на null и выбрасывание собственного исключения NullPointerException.
Написать программу, которая выполняет проверку заданных ссылок на null и выбрасывает исключение NullPointerException
со специализированными сообщениями.

42. Проверка ссылок на null и выбрасывание заданного исключения (например, исключения IllegalArgumentException).
Написать программу, которая выполняет проверки заданных ссылок на null и выбрасывает указанное исключение.

44. Проверка индекса в интервале от 0 до длины.
Написать программу, которая проверяет, находится ли заданный индекс между 0 (включительно) и заданной длиной (исключительно).
Если заданный индекс находится вне интервала [0; заданной длины], ТО выбросить исключение IndexOutOfBoundsException.

46. Методы equals() и hashcode().
Объяснить и проиллюстрировать принцип работы методов equals и hashcode в языке Java

47. Немутируемые объекты в двух словах.
Объяснить и проиллюстрировать, что такое немутируемый объект в среде Java.

48. Немутируемая строка.
Объяснить, почему класс string является немутируемым.

49. Немутируемый класс.
Написать программу, представляющую немутируемый класс.

50. Передача мутируемых объектов в немутируемый класс и возврат мутируемых объектов из него.
Написать программу, которая передает мутируемый объект в немутируемый класс и возвращает его из немутируемого класса.

53. Клонирование объектов.
Написать программу, которая иллюстрирует методы мелкого и глубокого клонирования.

54. Переопределение метода toString().
Объяснить и продемонстрировать способы переопределения метода toString()

55. Выражения switch.
Предоставить краткий обзор инструкции и выражений switch В JDK 12

56. Многочисленные метки вариантов.
Написать фрагмент кода для примера выражения switch JDK 12 с многочисленными метками вариантов case.

57. Блоки инструкций.
Написать фрагмент кода с примером выражения switch JDK 12, в котором метки вариантов case указывают на блок в фигурных скобках

Работа с датой и временем

58. Конвертирование строки в дату и время.
Написать программу, которая иллюстрирует конвертацию из строки в дату-время и обратно.

59. Форматирование даты и времени.
Объяснить форматный шаблон для даты и времени.

60.  Получение текущих даты и времени без времени или даты.
Написать программу, которая извлекает текущую дату без времени или даты.

61. Класс LocalDateTime ИЗ LocalDate И LocalTime.
Написать Программу, которая строит экземпляр класса LocalDateTime из объектов LocalDate И LocalTime.
Она объединяет дату и время в одном объекте LocalDateTime

62. Машинное время посредством класса instant.
Объяснить и привести пример API Instant.

63. Определение временного периода с использованием значений на основе даты (Period) и значений на основе времени (Duration).
Объяснить и привести пример использования API Period И Duration.

64. Получение единиц даты и времени.
Написать программу, которая извлекает единицы даты и времени (например, извлекает из даты год, месяц, минуту и т.д.) из объекта, представляющего дату-время

65. Прибавление к дате и времени и вычитание из них.
Написать программу, которая прибавляет (и вычитает) количество времени (например, годы, дни или минуты) к объекту даты-времени
(например, прибавляет час к дате, вычитает 2 дня из LocalDateTime И Т. Д.).

68. Вывод на экран информации о дате и времени полета.
Написать программу, которая показывает информацию о запланированном времени полета, равном 15 часам 30 минутам,
а именно время перелета из Перта (Австралия) в Бухарест (Румыния).

69. Конвертирование временной метки UNIX в дату и время.
Написать программу, которая конвертирует временную метку UNIX в java.util.Date и java.time.LocalDateTime.

71. Определение/извлечение поясных смещений.
Написать программу, которая раскрывает разные технические приемы определения и извлечения поясных смещений.

76. Разница между двумя датами.
Написать программу, которая вычисляет временной промежуток в днях между двумя датами.

Логический вывод типов

78. Простой пример с использованием переменной типа var.
Написать программу, которая иллюстрирует правильное использование логического вывода типа (переменной типа var) в отношении удобочитаемости кода.

79. Использование типа var с примитивными типами.
Написать программу, которая иллюстрирует применение переменной var с примитивными типами Java (int, long, float И double).

81. Явное понижающее приведение типов или как избегать типа var.
Написать программу, которая иллюстрирует сочетание типа var и явного понижающего приведения типов и объясняет причину, почему тип var следует избегать.

83. Сочетание LVTI и программирования согласно интерфейсу.
Написать программу, которая иллюстрирует использование типа var посредством программирования согласно интерфейсу.

85. Присвоение массива типа var.
Написать программу, которая передает массив переменной var.

86. Использование LVTI в составных объявлениях.
Объяснить и проиллюстрировать использование LVTI с составными объявлениями.

89. LVTI и циклы for.
Написать несколько примеров, иллюстрирующих использование LVTI в циклах for.

90. LVTI и потоки.
Написать несколько фрагментов кода, которые иллюстрируют использование LVTI и потоков Java.

91. Использование LVTI для разбиения вложенных/крупных цепочек выражений.
Написать программу, которая демонстрирует использование LVTI для разбиения вложенной/крупной цепочки выражений.

92. LVTI и возвращаемый и параметрический типы метода.
Написать несколько фрагментов кода, которые иллюстрируют использование LVTI и методов Java в терминах возвращаемых и параметрических типов.

Массивы, коллекции и структуры данных

99. Сортировка массива (cортировка пузырьком, cортировка вставками).
Написать несколько программ, которые иллюстрируют разные алгоритмы сортировки массивов.

100. Поиск элемента в массиве.
Написать несколько программ, которые иллюстрируют способ отыскания заданного элемента (примитивного и объекта) взаданном массиве.
Найти индекс и/или просто проверить, что значение находится в массиве.

101. Проверка эквивЗамена элементов в отображении мар. Написать программу, которая заменяет данные в отображении мар.алентности или несовпадения двух массивов.
Написать программу, которая проверяет эквивалентность двух заданных массивов или их несовпадение.

102. Сравнение двух массивов лексикографически.
Написать программу, которая сравнивает заданные массивы лексикографически.

103. Создание потока из массива.
Написать программу, которая создает поток из заданного массива.

104. Минимальное, максимальное и среднее значения массива.
Написать программу, которая вычисляет минимальное, максимальное и среднее значения заданного массива.

105. Инвертирование массива.
Написать программу, которая инвертирует заданный массив.

106. Заполнение и настройка массива.
Написать несколько примеров заполнения массива и задания всех элементов на основе генераторной функции для вычисления каждого элемента.

107. Следующий больший элемент.
Написать программу, которая возвращает следующий больший элемент для каждого элемента массива.

108. Изменение размера массива.
Написать программу, которая добавляет элемент в массив, увеличивая его размер на единицу.
Кроме того, написать программу, которая увеличивает размер массива на заданную длину.

109. Создание немодифицируемых/немутируемых коллекций.
Написать несколько примеров создания немодифицируемых и немутируемых отображений Мар.

110. Возврат значения по умолчанию из коллекции мар.
Написать программу, которая получает значение из отображения мар либо значение по умолчанию.

111. Вычисление отсутствия/присутствия элемента в отображении мар.
Написать программу, которая вычисляет значение отсутствующего ключа или новое значение текущего ключа.

112. Удаление элемента из отображения мар.
Написать программу, которая удаляет элемент из отображения мар посредством заданного ключа.

113. Замена элементов в отображении мар.
Написать программу, которая заменяет данные в отображении мар.

114. Сравнение двух отображений мар.
Написать программу, которая сравнивает два отображения мар.

115. Сортировка отображения мар.
Написать программу, которая сортирует отображение Мар.

116. Копирование отображения HashMap.
Написать программу, которая выполняет мелкую и глубокую КОПИЮ коллекции HashMap.

117. Слияние отображений мар.
Написать программу, которая объединяет два отображения мар.

118. Удаление всех элементов коллекции, которые совпадают с предикатом.
Написать программу, которая удаляет все элементы коллекции, которые совпадают с заданным предикатом.

119. Конвертирование коллекции в массив.
Написать программу, которая конвертирует коллекцию в массив.

120. Фильтрация коллекции по списку.
Написать несколько решений для фильтрации коллекции по списку. Показать лучший способ сделать это.

121. Замена элементов списка.
Написать программу, которая заменяет каждый элемент списка результатом применения к нему заданного оператора.
