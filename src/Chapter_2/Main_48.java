package Chapter_2;

import javax.swing.*;
import java.util.Objects;

public class Main_48 {

    public static void main(String[] args) {
        // 1 -  Одна из причин это ПУЛ СТРОК

        String x = "book";
        String y = "book";
        String z = "book";

        // Создан только один строковый объект со значением "book"

        System.out.println(Objects.hashCode(x)); // 3029737
        System.out.println(Objects.hashCode(y)); // 3029737
        System.out.println(Objects.hashCode(z)); // 3029737


        // Но если мы сделаем  String st = new String("book") - то это  будет помещен в памяти в обычную кучу вместо пула строковых констант.
        // Что бы добавить в пул строк нашу строку, есть метод st.intern()

        // 2 - Безопасность
        // 3 - Нитебезопасность
        // 4 - Кэширование хеш-кодов


        // Недостатки немутируемости строк

        // 1 - Строка не может расширяться (Немутируемый класс следует объявлять final во избежание расширения.)
        // 2 - Чувствительные данные в памяти в течение продолжительного времени
            // Чувствительные данные в строках (например, пароли) могут храниться в памяти (в пул строковых констант) в течение продолжительного времени.
            // Во избежание этого потенциального недостатка рекомендуется хранить чувствительные данные (например, пароли) в массиве char [ ] вместо значения типа string.
            // Есть специальный класс  JPasswordField - на вход принимает пароль, на выходе отдает пароль в char []
        // 3 - Ошибка OutOfMemoryError  Хранение слишком большого числа строковых литералов в пуле строковых констант приводит к ошибке исчерпания памяти OutOfMemoryError

    }

}
